AWSTemplateFormatVersion: '2010-09-09'
Description: Infrastructure for Mongo DB behind Loadbalancer
Parameters:
  TagName:
    Type: String
    Description: Tag name for the infrastructure
  VPC:
    Type: String
    Default: vpc-05df9161 
    Description: Name of the vpc used in the cluster.
  ClusterName:
    Type: String
    Default: mongo-autoscale
    Description: Name of the cluster to which service is to be deployed.
  ContainerInstancePort:
    Type: Number
    Default: 27017
    Description: Value for Instance port to which container port is to be mapped [49153 to 65535].
  SubnetValue:
    Type: String
    Default: subnet-eda8f79b 
    Description: Name of the subnet to which loadbalancer should be attached.
  BucketName:
    Type: String
    Default: vnxbucket
    Description: Specify the bucket name where seed data resides.
Resources:
  ECSTaskS3BucketRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${TagName}-ecsTaskS3BucketRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Principal: {Service: [ecs-tasks.amazonaws.com]}
            Action: ['sts:AssumeRole']
        Path: /
        Policies:
        - PolicyName: !Sub ${TagName}-ecsTaskS3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                Resource: !Sub "arn:aws:s3:::${BucketName}/*"

  PublicSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Public Security group for the architecture
      SecurityGroupIngress:
        - CidrIp: '0.0.0.0/0'
          IpProtocol: -1
          ToPort: -1
      VpcId: !Ref VPC

  LoadBalancer:
    DependsOn: PublicSecurityGroup
    Type: "AWS::ElasticLoadBalancing::LoadBalancer"
    Properties:
      Listeners:
        - InstancePort: !Ref ContainerInstancePort
          InstanceProtocol: TCP
          LoadBalancerPort: 80
          Protocol: TCP
      SecurityGroups:
        - !Ref PublicSecurityGroup
      Subnets:
        - !Ref SubnetValue  

  ServiceDefinition:
    DependsOn: LoadBalancer
    Type: "AWS::ECS::Service"
    Properties: 
      Cluster: !Ref ClusterName
      DesiredCount: 1
      ServiceName: !Sub ${TagName}-mongo
      Role: ecsServiceRole
      LoadBalancers:
        - LoadBalancerName: !Ref LoadBalancer
          ContainerPort: 27017
          ContainerName: mongo
      TaskDefinition: !Ref MongoTaskDefinition

  MongoTaskDefinition:
    DependsOn: 
      - LoadBalancer
      - ECSTaskS3BucketRole
    Type: "AWS::ECS::TaskDefinition"
    Properties: 
      Family: mongo
      TaskRoleArn: !GetAtt ECSTaskS3BucketRole.Arn
      ContainerDefinitions:
        - Cpu: 0
          Essential: true
          Image: mongo
          Memory: 256
          Name: mongo
          PortMappings:
            - ContainerPort: 27017
              HostPort: !Ref ContainerInstancePort 
        - Command:
            - !Sub "apt-get update && apt-get install awscli -y && aws s3 cp s3://${BucketName}/mongo-seed-data.json /tmp/ && cat /tmp/mongo-seed-data.json && mongoimport --host=mongo --jsonArray --db mongo --collection people --file /tmp/mongo-seed-data.json"
          Cpu: 0
          EntryPoint:
            - "sh"
            - "-c"
          Essential: false
          Image: mongo
          Links:
            - mongo
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: vn-mongo
              awslogs-region: eu-west-1
              awslogs-stream-prefix: seed-log2
          Memory: 256
          Name: seed
Outputs:
  LoadBalancerName:
    Description: Information about the value
    Value: !GetAtt LoadBalancer.DNSName
          
        
 